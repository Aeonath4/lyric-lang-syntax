{
  "scopeName": "source.lyric",
  "patterns": [
    { "include": "#keywords" },
    { "include": "#control" },
    { "include": "#logical" },
    { "include": "#literals" },
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#regex" },
    { "include": "#numbers" },
    { "include": "#builtins" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "match": "\\b(def|class|var|god|bin|int|flt|str|rex|pyobject|None|based|on|public|private|protected)\\b",
          "name": "keyword.declaration.lyric"
        }
      ]
    },
    "control": {
      "patterns": [
        {
          "match": "\\b(if|else if|else|end|given|done|try|catch|finally|fade|raise|return|break|continue|importpy)\\b",
          "name": "keyword.control.flow.lyric"
        }
      ]
    },
    "logical": {
      "patterns": [
        {
          "match": "\\b(and|or|not)\\b",
          "name": "keyword.operator.logical.lyric"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "match": "\\b(true|false)\\b",
          "name": "constant.language.boolean.lyric"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "#.*$",
          "name": "comment.line.number-sign.lyric"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.lyric"
        },
        {
          "begin": "'",
          "end": "'",
          "name": "string.quoted.single.lyric"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "match": "\\b[0-9]+(\\.[0-9]+)?\\b",
          "name": "constant.numeric.lyric"
        }
      ]
    },
    "regex": {
      "patterns": [
        {
          "begin": "/",
          "end": "/",
          "name": "string.regex.lyric",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.lyric"
            }
          ]
        }
      ]
    },
    "builtins": {
      "patterns": [
        {
          "match": "\\b(print|input|int|float|str|len|range|type|isinstance|open|append|keys|values)\\b",
          "name": "support.function.builtin.lyric"
        }
      ]
    }
  }
}
